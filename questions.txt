Как работает чат с поседними доработками в моем понимании:
Клиент:
1. Клиент при нажатии кнопки Login создает объект Socket для подключения к серверу и передает его объекту класса
SocketThread, который в свою очередь создает отдельный поток для взаимойдействия с сервером. Данные для подключения к
серверу клиент берет из полей tfIPAddress, tfPort совего GUI.
2. После открытия потоков ввода-вывода (onSocketReady) клиент отправляет серверу сообщение о необходимости авторизации
клиента. Формат сообщения клиент берет из класса Library модуля chat-library. Данные для отправки сообщения клиент берет
из полей tfLogin, tfPassword своего GUI.
3. Если авторизация на сервере прошла успешно, то клиент получает об этом соответствующее сообщение и может продолжать
отправлять и получать сообщения от сервера. Если авторизация прошла неуспешно, то клиент получит об этом сообщение и
соединение с сервером будет закрыто сервером.
Сервер:
1. Сервер при подключении клиента создает объект класса ClientThread (наследник класса SocketThread), который в свою
очередь создает отдельный поток для обмена данными с клиентом.
2. После открытия потоков ввода-вывода (onSocketReady) сервер добавляет клиента в коллекцию подключенных клиентов
Vector<ClientThread>.
3. Когда сервер получает сообщение от клиента он впервую очередь проверяет авторизован ли данный клиент (поле
isAuthorized класса ClientThread). Если клиент авторизован, то сообщение клиента отправляется всем авторизованным
пользователям.
Если клиент не авторизован, то сервер проверяет формат принятого сообщения. Если формат не соответствует формату
сообщения об авторизации класса Library, то сервер отправляет клиенту сообщение о неверном формате сообщения и закрывает
поток данного клиента. Если проверка формата прошла успешно, то сервер ищет в таблице USERS БД запись о пользователе с
логином и паролем равными переданным от клиента. Работа с БД происходит в классе SqlClient.
Если в БД были найдены записи о пользователе, то сервер отправляет клиенту сообщение об успешной авторизации и
отправляет всем авторизованным пользователям широковещательное сообщение о подключении пользователя.
Если в БД записи не были найдены, то сервер логирует неуспешную попытку входа данного пользователя, отправляет клиенту
сообщение о неудачной попытке авторизации и закрывает поток данного клиента.